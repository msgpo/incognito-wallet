commands:
  get_app_info:
    description: "Get app version and last commit message"
    steps:
      - run:
          name: Setup Environment Variables
          command: |
            echo "export LAST_COMMIT_MESSAGE="$(git show -s --format=%s)"" >> $BASH_ENV
            echo "export APP_VERSION="$(sed 's/.*\"version\": \"\(.*\)\".*/\1/;t;d' ./package.json)"" >> $BASH_ENV
  install_modules:
      description: "Install node_modules"
      steps:
        - run:
            name: Install node_modules
            command: |
              yarn install --frozen-lockfile
  login_appcenter:
      description: "Install and login appcenter"
      steps:
        - run:
            name: Login appcenter
            command: |
              npm install appcenter-cli -g
              appcenter login --token $CODEPUSH_ACCESS_TOKEN --disable-telemetry
jobs:
  checkout_code:
    executor:
      name: rn/linux_js
      node_version: '10'
    steps:
      - checkout
      - persist_to_workspace:
          paths: .
          root: .
  generate_data:
    executor:
      name: rn/linux_js
      node_version: '10'
    steps:
      - attach_workspace:
          at: .
      - run: chmod +x .circleci/generate-data.sh
      - run: sh .circleci/generate-data.sh
      - install_modules
      - persist_to_workspace:
          paths: .
          root: .
  build_android_staging:
    executor:
      name: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - get_app_info
      - run: yarn buildStaging
      - run: chmod +x .circleci/slack-upload.sh
      - run: cp android/app/build/outputs/apk/releaseStaging/app-releaseStaging.apk ./$APP_VERSION-staging.apk
      - run: bash .circleci/slack-upload.sh -f ./$APP_VERSION-staging.apk -c '$SLACK_CHANNEL' -s $SLACK_API_KEY -n "$APP_VERSION-staging" -x "$LAST_COMMIT_MESSAGE"
  build_android_next:
    executor:
      name: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - get_app_info
      - run: yarn buildNext
      - run: chmod +x .circleci/slack-upload.sh
      - run: cp android/app/build/outputs/apk/releaseStaging/app-releaseNext.apk ./$APP_VERSION-next.apk
      - run: bash .circleci/slack-upload.sh -f ./$APP_VERSION-next.apk -c '$SLACK_CHANNEL' -s $SLACK_API_KEY -n "$APP_VERSION-next" -x "$LAST_COMMIT_MESSAGE"
  build_android_release:
    executor:
      name: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - get_app_info
      - run: yarn buildRelease
      - run: chmod +x .circleci/slack-upload.sh
      - run: cp android/app/build/outputs/apk/release/app-release.apk ./$APP_VERSION.apk
      - run: bash .circleci/slack-upload.sh -f ./$APP_VERSION.apk -c '$SLACK_CHANNEL' -s $SLACK_API_KEY -n "$APP_VERSION" -x "$LAST_COMMIT_MESSAGE"
  push_staging:
    executor:
      name: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - login_appcenter
      - run: yarn deploy:staging

orbs:
  rn: react-native-community/react-native@4.1.0
version: 2.1
workflows:
  build_staging:
    jobs:
      - checkout_code:
          filters:
            branches:
              only:
                - build/staging
      - generate_data:
          requires:
            - checkout_code
      - build_android_staging:
          requires:
            - generate_data
  build_release:
      jobs:
        - checkout_code:
            filters:
              branches:
                only:
                  - build/release
        - generate_data:
            requires:
              - checkout_code
        - build_android_release:
            requires:
              - generate_data
  build_next:
      jobs:
        - checkout_code:
            filters:
              branches:
                only:
                  - build/next
        - generate_data:
            requires:
              - checkout_code
        - build_android_next:
            requires:
              - generate_data
  push_staging:
      jobs:
        - checkout_code:
            filters:
              branches:
                only:
                  - develop
        - generate_data:
            requires:
              - checkout_code
        - push_staging:
            requires:
              - generate_data
